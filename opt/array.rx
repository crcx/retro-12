{{
  variable quote
  variable flag

  : addElements ( "-n )
    repeat getToken "}" compare not 0; drop tib toNumber , again ;
---reveal---
  : new{ ( "-a )
    here 0 , addElements here over 1+ - over ! ;

  : map ( aq- )
    !quote [ [ @ @quote do ] sip ! ] ARRAY each@ ;

  : apply ( aq- )
    !quote [ @ @quote do ] ARRAY each@ ;

  : sum  ( a-n )
    0 swap &+ apply ;

  : length  ( a-n )  @ ;

  : reverse ( a- )
    @+ 2over
    heap [ [ @+ , ] times drop here 1- ] preserve
    swap [ [ @ over ! 1+ ] sip 1- ] times 2drop ;

  : append ( aa-a )
    here 0 , [ swap @+ [ @+ , ] times drop @+ [ @+ , ] times drop ] dip
    here over 1+ - over ! ;

  : fromQuote ( q-a )
    depth &do dip here 0 , [ depth - abs &, times ] dip
    here over 1+ - over ! dup reverse ;

  : toQuote ( a-q )
    [ ` [ ] dip [ 1 , , ] apply ` ] ;

  : in?  ( na-f )
    -1 !flag
    [ over <> @flag and !flag ] apply drop @flag not ;

  : stringIn?  ( $a-f )
    -1 !flag
    [ over compare not @flag and !flag ] apply drop @flag not ;

  : display ( a- )
    cr [ putn space ] apply ;
}}

{{
  variable a
  variable c
  variable n

  : pair ( -aa )
    @n @a + dup 1+ ;

  : exchange  ( aa- )
    2over [ @ ] bi@ [ swap ! ] dip swap ! ;

  : contrast  ( aa-f )
    &@ bi@ > ;
---reveal---
  : sort:bubble  ( a- )
    @+ !c !a
    @c @c *
    [ @c @a length even? + [ !n pair contrast [ pair exchange ] if-true ] iter ] times ;
}}
