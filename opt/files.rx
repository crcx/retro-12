{{
  variable fid
  variable fsize
  variable active
  : io     (  n-f )  4 out wait 4 in ;
  : done   ( nn-  )  2drop active off ;
---reveal---
  0 constant :R
  1 constant :W
  2 constant :A
  3 constant :M
  : open-file   (  $m-h ) -1 io ;
  : read-file   (   h-f ) -2 io ;
  : write-file  (  ch-f ) -3 io ;
  : close-file  (   h-f ) -4 io ;
  : file-pos    (   h-n ) -5 io ;
  : file-seek   (  nh-f ) -6 io ;
  : file-size   (   h-n ) -7 io ;
  : delete-file (   $-n ) -8 io ;
  : slurp  (  a$-n )
    :R open-file !fid
    @fid file-size !fsize
    @fsize [ @fid read-file swap !+ ] times 0 swap !
    @fid close-file drop @fsize ;
  : spew   (  an$-n )
    :W open-file !fid 0 !fsize
    [ @+ @fid write-file drop fsize ++ ] times drop
    @fid close-file drop @fsize ;
  : readLine ( h-a )
    active on
    tib [ over read-file dup 10 13 within
          [ drop 0 swap ! drop active off ] [ swap !+ ] if @active ] while
    tib tempString ;
  : writeLine ( $h- )
    !fid active on
    [ @+ dup 0 = &done [ @fid write-file drop ] if @active ] while
    10 @fid write-file drop ;
}}


